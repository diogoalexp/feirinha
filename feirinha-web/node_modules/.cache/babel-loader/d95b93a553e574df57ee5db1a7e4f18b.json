{"ast":null,"code":"import _objectSpread from \"C:\\\\workspace\\\\React\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\workspace\\\\React\\\\burger-builder\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  chese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchaseable: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updateCounted = oldCount + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updateCounted;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      if (oldCount <= 0) return;\n      const updateCounted = oldCount - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updateCounted;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n    };\n  }\n\n  updatePurchaseState() {\n    const ingredients = _objectSpread({}, this.state.ingredients);\n\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchaseable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabledInfo: disabledInfo,\n      price: this.state.totalPrice,\n      purchasable: this.state.purchasable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["C:\\workspace\\React\\burger-builder\\src\\containers\\BurgerBuilder\\BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","INGREDIENT_PRICES","salad","chese","meat","bacon","BurgerBuilder","state","ingredients","cheese","totalPrice","purchaseable","addIngredientHandler","type","oldCount","updateCounted","updatedIngredients","priceAddition","oldPrice","newPrice","setState","removeIngredientHandler","priceDeduction","updatePurchaseState","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key","purchasable"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport Aux from '../../hoc/Aux';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    chese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n}\r\n\r\nclass BurgerBuilder extends Component {\r\n    state = {\r\n        ingredients:{\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0\r\n        },\r\n        totalPrice: 4,\r\n        purchaseable: false\r\n    }\r\n\r\n    updatePurchaseState(){\r\n        const ingredients = {\r\n            ...this.state.ingredients\r\n        }\r\n        const sum = Object.keys(ingredients).map(igKey => {\r\n            return ingredients[igKey];\r\n        }).reduce((sum, el) =>{\r\n            return sum + el;\r\n        }, 0);\r\n        this.setState({purchaseable: sum > 0});\r\n    }\r\n\r\n    addIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updateCounted = oldCount + 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        }\r\n        updatedIngredients[type] = updateCounted;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\r\n    }\r\n\r\n    removeIngredientHandler = (type) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        if(oldCount <= 0) return; \r\n\r\n        const updateCounted = oldCount - 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        }\r\n        updatedIngredients[type] = updateCounted;\r\n        const priceDeduction = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceDeduction;\r\n        this.setState({totalPrice: newPrice, ingredients: updatedIngredients});\r\n    }\r\n\r\n    render(){\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        }\r\n\r\n        for (let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        }\r\n\r\n        return (\r\n            <Aux>\r\n                <Burger ingredients={this.state.ingredients}/>\r\n                <BuildControls \r\n                    ingredientAdded={this.addIngredientHandler} \r\n                    ingredientRemoved={this.removeIngredientHandler}\r\n                    disabledInfo={disabledInfo}\r\n                    price={this.state.totalPrice}\r\n                    purchasable={this.state.purchasable}/>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}