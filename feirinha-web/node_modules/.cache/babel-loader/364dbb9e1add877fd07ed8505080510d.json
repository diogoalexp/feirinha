{"ast":null,"code":"import _objectSpread from \"C:\\\\workspace\\\\React\\\\burger-builder\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\workspace\\\\React\\\\burger-builder\\\\src\\\\containers\\\\BurgerBuilder\\\\BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasable: false,\n      purchasing: false\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n\n      if (oldCount <= 0) {\n        return;\n      }\n\n      const updatedCount = oldCount - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updatedCount;\n      const priceDeduction = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceDeduction;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      // alert('You continue!');\n      const order = {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice,\n        customer: {\n          name: 'Diogo Pereira',\n          address: {\n            street: 'Test Street',\n            zipCode: '123456',\n            country: 'Brazil'\n          },\n          email: 'teste@gmail.com'\n        }\n      };\n      axios.post('/orders.json', order).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients).map(igKey => {\n      return ingredients[igKey];\n    }).reduce((sum, el) => {\n      return sum + el;\n    }, 0);\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    } // {salad: true, meat: false, ...}\n\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(OrderSummary, {\n      ingredients: this.state.ingredients,\n      price: this.state.totalPrice,\n      purchaseCancelled: this.purchaseCancelHandler,\n      purchaseContinued: this.purchaseContinueHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })), React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      purchasable: this.state.purchasable,\n      ordered: this.purchaseHandler,\n      price: this.state.totalPrice,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["C:\\workspace\\React\\burger-builder\\src\\containers\\BurgerBuilder\\BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","axios","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","setState","updatePurchaseState","removeIngredientHandler","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","order","price","customer","name","address","street","zipCode","country","email","post","then","response","console","log","catch","error","sum","Object","keys","map","igKey","reduce","el","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport axios from '../../axios-orders';\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n};\r\n\r\nclass BurgerBuilder extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {...}\r\n    // }\r\n    state = {\r\n        ingredients: {\r\n            salad: 0,\r\n            bacon: 0,\r\n            cheese: 0,\r\n            meat: 0\r\n        },\r\n        totalPrice: 4,\r\n        purchasable: false,\r\n        purchasing: false\r\n    }\r\n\r\n    updatePurchaseState (ingredients) {\r\n        const sum = Object.keys( ingredients )\r\n            .map( igKey => {\r\n                return ingredients[igKey];\r\n            } )\r\n            .reduce( ( sum, el ) => {\r\n                return sum + el;\r\n            }, 0 );\r\n        this.setState( { purchasable: sum > 0 } );\r\n    }\r\n\r\n    addIngredientHandler = ( type ) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        const updatedCount = oldCount + 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceAddition = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice + priceAddition;\r\n        this.setState( { totalPrice: newPrice, ingredients: updatedIngredients } );\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    removeIngredientHandler = ( type ) => {\r\n        const oldCount = this.state.ingredients[type];\r\n        if ( oldCount <= 0 ) {\r\n            return;\r\n        }\r\n        const updatedCount = oldCount - 1;\r\n        const updatedIngredients = {\r\n            ...this.state.ingredients\r\n        };\r\n        updatedIngredients[type] = updatedCount;\r\n        const priceDeduction = INGREDIENT_PRICES[type];\r\n        const oldPrice = this.state.totalPrice;\r\n        const newPrice = oldPrice - priceDeduction;\r\n        this.setState( { totalPrice: newPrice, ingredients: updatedIngredients } );\r\n        this.updatePurchaseState(updatedIngredients);\r\n    }\r\n\r\n    purchaseHandler = () => {\r\n        this.setState({purchasing: true});\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing: false});\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        // alert('You continue!');\r\n        const order =  {\r\n            ingredients: this.state.ingredients,\r\n            price: this.state.totalPrice,\r\n            customer: {\r\n                name: 'Diogo Pereira',\r\n                address:{\r\n                    street: 'Test Street',\r\n                    zipCode: '123456',\r\n                    country: 'Brazil'\r\n                },\r\n                email: 'teste@gmail.com'\r\n            }\r\n        }\r\n        axios.post('/orders.json', order)\r\n            .then(response => {\r\n                console.log(response);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    render () {\r\n        const disabledInfo = {\r\n            ...this.state.ingredients\r\n        };\r\n        for ( let key in disabledInfo ) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        // {salad: true, meat: false, ...}\r\n        return (\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    <OrderSummary \r\n                        ingredients={this.state.ingredients}\r\n                        price={this.state.totalPrice}\r\n                        purchaseCancelled={this.purchaseCancelHandler}\r\n                        purchaseContinued={this.purchaseContinueHandler} />\r\n                </Modal>\r\n                <Burger ingredients={this.state.ingredients} />\r\n                <BuildControls\r\n                    ingredientAdded={this.addIngredientHandler}\r\n                    ingredientRemoved={this.removeIngredientHandler}\r\n                    disabled={disabledInfo}\r\n                    purchasable={this.state.purchasable}\r\n                    ordered={this.purchaseHandler}\r\n                    price={this.state.totalPrice} />\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}