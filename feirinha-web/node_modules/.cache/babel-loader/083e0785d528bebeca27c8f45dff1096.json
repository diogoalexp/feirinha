{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\React\\\\burger-builder\\\\src\\\\components\\\\UI\\\\Input\\\\Input.js\";\nimport React from 'react';\nimport classes from './Input.module.css';\n\nconst input = props => {\n  let inputElement = null;\n  const inputClasses = [classes.inputElement];\n\n  if (props.invalid) {\n    inputClasses.push('Invalid');\n  }\n\n  switch (props.elementType) {\n    case 'input':\n      inputElement = React.createElement(\"input\", Object.assign({\n        className: inputClasses.join(' ')\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }));\n      break;\n\n    case 'textarea':\n      inputElement = React.createElement(\"textarea\", Object.assign({\n        className: classes.InputElement\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }));\n      break;\n\n    case 'select':\n      inputElement = React.createElement(\"select\", {\n        className: classes.InputElement,\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, props.elementConfig.options.map(option => React.createElement(\"option\", {\n        key: option.value,\n        value: option.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, option.displayValue)));\n      break;\n\n    default:\n      inputElement = React.createElement(\"input\", Object.assign({\n        className: classes.InputElement\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }));\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.Input,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: classes.Label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, props.label), inputElement);\n};\n\nexport default input;","map":{"version":3,"sources":["C:\\workspace\\React\\burger-builder\\src\\components\\UI\\Input\\Input.js"],"names":["React","classes","input","props","inputElement","inputClasses","invalid","push","elementType","join","elementConfig","value","changed","InputElement","options","map","option","displayValue","Input","Label","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,KAAK,GAAKC,KAAF,IAAa;AACvB,MAAIC,YAAY,GAAG,IAAnB;AAEA,QAAMC,YAAY,GAAG,CAACJ,OAAO,CAACG,YAAT,CAArB;;AAEA,MAAGD,KAAK,CAACG,OAAT,EAAiB;AACbD,IAAAA,YAAY,CAACE,IAAb,CAAkB,SAAlB;AACH;;AAED,UAASJ,KAAK,CAACK,WAAf;AACI,SAAO,OAAP;AACIJ,MAAAA,YAAY,GAAG;AACX,QAAA,SAAS,EAAEC,YAAY,CAACI,IAAb,CAAkB,GAAlB;AADA,SAEPN,KAAK,CAACO,aAFC;AAGX,QAAA,KAAK,EAAEP,KAAK,CAACQ,KAHF;AAIX,QAAA,QAAQ,EAAER,KAAK,CAACS,OAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AAKA;;AACJ,SAAO,UAAP;AACIR,MAAAA,YAAY,GAAG;AACX,QAAA,SAAS,EAAEH,OAAO,CAACY;AADR,SAEPV,KAAK,CAACO,aAFC;AAGX,QAAA,KAAK,EAAEP,KAAK,CAACQ,KAHF;AAIX,QAAA,QAAQ,EAAER,KAAK,CAACS,OAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AAKA;;AACJ,SAAO,QAAP;AACIR,MAAAA,YAAY,GACR;AACI,QAAA,SAAS,EAAEH,OAAO,CAACY,YADvB;AAEI,QAAA,KAAK,EAAEV,KAAK,CAACQ,KAFjB;AAGI,QAAA,QAAQ,EAAER,KAAK,CAACS,OAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIKT,KAAK,CAACO,aAAN,CAAoBI,OAApB,CAA4BC,GAA5B,CAAgCC,MAAM,IACnC;AAAQ,QAAA,GAAG,EAAEA,MAAM,CAACL,KAApB;AAA2B,QAAA,KAAK,EAAEK,MAAM,CAACL,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKK,MAAM,CAACC,YADZ,CADH,CAJL,CADJ;AAYA;;AACJ;AACIb,MAAAA,YAAY,GAAG;AACX,QAAA,SAAS,EAAEH,OAAO,CAACY;AADR,SAEPV,KAAK,CAACO,aAFC;AAGX,QAAA,KAAK,EAAEP,KAAK,CAACQ,KAHF;AAIX,QAAA,QAAQ,EAAER,KAAK,CAACS,OAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAf;AA9BR;;AAqCA,SACI;AAAK,IAAA,SAAS,EAAEX,OAAO,CAACiB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAEjB,OAAO,CAACkB,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkChB,KAAK,CAACiB,KAAxC,CADJ,EAEKhB,YAFL,CADJ;AAOH,CArDD;;AAuDA,eAAeF,KAAf","sourcesContent":["import React from 'react';\r\n\r\nimport classes from './Input.module.css';\r\n\r\nconst input = ( props ) => {\r\n    let inputElement = null;\r\n\r\n    const inputClasses = [classes.inputElement];\r\n\r\n    if(props.invalid){\r\n        inputClasses.push('Invalid');\r\n    }\r\n\r\n    switch ( props.elementType ) {\r\n        case ( 'input' ):\r\n            inputElement = <input\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ( 'textarea' ):\r\n            inputElement = <textarea\r\n                className={classes.InputElement}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ( 'select' ):\r\n            inputElement = (\r\n                <select\r\n                    className={classes.InputElement}\r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input\r\n                className={classes.InputElement}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default input;"]},"metadata":{},"sourceType":"module"}