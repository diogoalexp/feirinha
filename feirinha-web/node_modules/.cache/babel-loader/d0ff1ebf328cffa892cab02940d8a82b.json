{"ast":null,"code":"var _jsxFileName = \"C:\\\\workspace\\\\React\\\\burger-builder\\\\src\\\\containers\\\\Checkout\\\\ContactData\\\\ContactData.js\";\nimport React, { Component } from 'react';\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport classes from './ContactData.module.css';\nimport axios from '../../../axios-orders';\nimport Input from '../../../components/UI/Input/Input';\n\nclass ContactData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      email: '',\n      address: {\n        street: '',\n        postalCode: ''\n      },\n      loading: false\n    };\n\n    this.orderHandler = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingredients: this.props.ingredients,\n        price: this.props.price,\n        customer: {\n          name: 'Max Schwarzmüller',\n          address: {\n            street: 'Teststreet 1',\n            zipCode: '41351',\n            country: 'Germany'\n          },\n          email: 'test@test.com'\n        },\n        deliveryMethod: 'fastest'\n      };\n      axios.post('/orders.json', order).then(response => {\n        this.setState({\n          loading: false\n        });\n        this.props.history.push('/');\n      }).catch(error => {\n        this.setState({\n          loading: false\n        });\n      });\n    };\n  }\n\n  render() {\n    let form = React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Input, {\n      inputtype: \"input\",\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Your Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Input, {\n      inputtype: \"input\",\n      type: \"email\",\n      name: \"email\",\n      placeholder: \"Your Mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Input, {\n      inputtype: \"input\",\n      type: \"text\",\n      name: \"street\",\n      placeholder: \"Street\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Input, {\n      inputtype: \"input\",\n      type: \"text\",\n      name: \"postal\",\n      placeholder: \"Postal Code\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Button, {\n      btnType: \"Success\",\n      clicked: this.orderHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"ORDER\"));\n\n    if (this.state.loading) {\n      form = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: classes.ContactData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Enter your Contact Data\"), form);\n  }\n\n}\n\nexport default ContactData;","map":{"version":3,"sources":["C:\\workspace\\React\\burger-builder\\src\\containers\\Checkout\\ContactData\\ContactData.js"],"names":["React","Component","Button","Spinner","classes","axios","Input","ContactData","state","name","email","address","street","postalCode","loading","orderHandler","event","preventDefault","setState","order","ingredients","props","price","customer","zipCode","country","deliveryMethod","post","then","response","history","push","catch","error","render","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport classes from './ContactData.module.css';\r\nimport axios from '../../../axios-orders';\r\nimport Input from '../../../components/UI/Input/Input';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        address: {\r\n            street: '',\r\n            postalCode: ''\r\n        },\r\n        loading: false\r\n    }\r\n\r\n    orderHandler = ( event ) => {\r\n        event.preventDefault();\r\n        this.setState( { loading: true } );\r\n        const order = {\r\n            ingredients: this.props.ingredients,\r\n            price: this.props.price,\r\n            customer: {\r\n                name: 'Max Schwarzmüller',\r\n                address: {\r\n                    street: 'Teststreet 1',\r\n                    zipCode: '41351',\r\n                    country: 'Germany'\r\n                },\r\n                email: 'test@test.com'\r\n            },\r\n            deliveryMethod: 'fastest'\r\n        }\r\n        axios.post( '/orders.json', order )\r\n            .then( response => {\r\n                this.setState( { loading: false } );\r\n                this.props.history.push('/');\r\n            } )\r\n            .catch( error => {\r\n                this.setState( { loading: false } );\r\n            } );\r\n    }\r\n\r\n    render () {\r\n        let form = (\r\n            <form>\r\n                <Input inputtype=\"input\" type=\"text\" name=\"name\" placeholder=\"Your Name\" />\r\n                <Input inputtype=\"input\" type=\"email\" name=\"email\" placeholder=\"Your Mail\" />\r\n                <Input inputtype=\"input\" type=\"text\" name=\"street\" placeholder=\"Street\" />\r\n                <Input inputtype=\"input\" type=\"text\" name=\"postal\" placeholder=\"Postal Code\" />\r\n                <Button btnType=\"Success\" clicked={this.orderHandler}>ORDER</Button>\r\n            </form>\r\n        );\r\n        if ( this.state.loading ) {\r\n            form = <Spinner />;\r\n        }\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your Contact Data</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactData;"]},"metadata":{},"sourceType":"module"}